# ****************************************************************************
# *  author: Roberta Daidone, roberta.daidone@iet.unipi.it                   *
# *                                                                          *
# ***************************************************************************/

[General]

# =============================================
# Always include the main Castalia.ini file
# =============================================
include ../Parameters/Castalia.ini


sim-time-limit = 100s

SN.field_x = 200	# meters
SN.field_y = 200	# meters

# These tests include 2 nodes each, coordinates will be specified manually
SN.numNodes = 2

# important wireless channel switch to allow mobility
SN.wirelessChannel.onlyStaticNodes = true
SN.wirelessChannel.sigma = 0
SN.wirelessChannel.bidirectionalSigma = 0

# Choose a radio and set the Tx power to a low value so
# that node's mobility has a better effect on connectivity
SN.node[*].Communication.Radio.RadioParametersFile = "../Parameters/Radio/CC2420.txt"
SN.node[*].Communication.Radio.TxOutputPower = "0dBm" # PA_LEVEL = 31

#Choose the IEEE 802.15.4 MAC
SN.node[*].Communication.MACProtocolName = "Mac802154"
SN.node[0].Communication.MAC.isFFD = true
SN.node[0].Communication.MAC.isPANCoordinator = true
SN.node[*].Communication.MAC.phyDataRate = 250			# IEEE 802.15.4-compliant
SN.node[*].Communication.MAC.phyBitsPerSymbol = 4		# O-QPSK (standard compliant)
SN.node[*].Communication.MAC.MACSecActive = true	
SN.node[*].Communication.MAC.secLevel = 7
SN.node[*].Communication.MAC.keyIdMode = 3

#TODO: trovare valori coerenti per i seguenti 3 valori
SN.node[*].Communication.MAC.macMaxPacketSize = 91
SN.node[*].Communication.MAC.macPacketOverhead = 9
SN.node[*].Communication.MAC.macBufferSize = 10	

# These tests use big packets (2kb) to show interference clearly
# This requires to set the max pkt size in all communication layers
SN.node[*].Communication.Routing.maxNetFrameSize = 99 	# ZigBee-compliant
SN.node[*].Communication.MAC.maxMACFrameSize = 118 		# IEEE 802.15.4-compliant
SN.node[*].Communication.Radio.maxPhyFrameSize = 127 	# IEEE 802.15.4-compliant

# Throughput test application is used to send 2000-byte
# packets to node 0 (which by default is the receiving 
# node for this app).5 packets per second will be send 
SN.node[*].ApplicationName = "ThroughputTest"
SN.node[*].Application.packet_rate = 5			 	#TODO: ragionare rispetto ai dati sperimentali (5 pkt/s Ã¨ coerente con lo scenario beacon-pacchetto?)
SN.node[*].Application.constantDataPayload = 18 	#TODO: convincersi che vada bene
# application's trace info for node 0 (receiving node)
# is turned on, to show some interesting patterns
SN.node[1].Communication.Radio.collectTraceInfo = true
SN.node[1].Communication.MAC.collectTraceInfo = true
SN.sendToGlobalFilter = true
#SN.globalFilter.collectTraceInfo = true
#SN.adversary.collectTraceInfo = true

# Nodes are moving, so seeing their location may be useful
# SN.node[*].MobilityManager.collectTraceInfo = true

# ==========================================================
# The default configuration sets node 0 to be mobile, while 
# sending nodes 1 and 2 are static. Receiving node 0 will 
# move in diagonal pattern, allowing it to receive packets 
# from node 1 and some time later from node 2. This will be
# clearly seen on the trace file and the collected output.
# ==========================================================

SN.node[0].xCoor = 0
SN.node[0].yCoor = 0
SN.node[1].xCoor = 5
SN.node[1].yCoor = 5
#SN.node[2].xCoor = 150
#SN.node[2].yCoor = 150

# <R.D.> NO MOBILITY AT THE MOMENT
#SN.node[0].MobilityManagerName = "LineMobilityManager"

#SN.node[0].MobilityManager.updateInterval = 100
#SN.node[0].MobilityManager.xCoorDestination = 200
#SN.node[0].MobilityManager.yCoorDestination = 200
#SN.node[0].MobilityManager.speed = 15
