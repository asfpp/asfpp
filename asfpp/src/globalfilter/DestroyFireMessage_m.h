//
// Generated file, do not edit! Created by nedtool 5.4 from globalfilter/DestroyFireMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __DESTROYFIREMESSAGE_M_H
#define __DESTROYFIREMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "PhysicalAttackWrapper.h"
// }}

/**
 * Class generated from <tt>globalfilter/DestroyFireMessage.msg:15</tt> by nedtool.
 * <pre>
 * message DestroyFireMessage
 * {
 *     PhysicalAttackWrapper physicalAttackWrapper;
 * 
 * }
 * </pre>
 */
class DestroyFireMessage : public ::omnetpp::cMessage
{
  protected:
    PhysicalAttackWrapper physicalAttackWrapper;

  private:
    void copy(const DestroyFireMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DestroyFireMessage&);

  public:
    DestroyFireMessage(const char *name=nullptr, short kind=0);
    DestroyFireMessage(const DestroyFireMessage& other);
    virtual ~DestroyFireMessage();
    DestroyFireMessage& operator=(const DestroyFireMessage& other);
    virtual DestroyFireMessage *dup() const override {return new DestroyFireMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual PhysicalAttackWrapper& getPhysicalAttackWrapper();
    virtual const PhysicalAttackWrapper& getPhysicalAttackWrapper() const {return const_cast<DestroyFireMessage*>(this)->getPhysicalAttackWrapper();}
    virtual void setPhysicalAttackWrapper(const PhysicalAttackWrapper& physicalAttackWrapper);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DestroyFireMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DestroyFireMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DESTROYFIREMESSAGE_M_H

