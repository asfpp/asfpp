//
// Generated file, do not edit! Created by nedtool 5.4 from actions/destroy/DestroyRequest.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __DESTROYREQUEST_M_H
#define __DESTROYREQUEST_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "EntryWrapper.h"
// }}

/**
 * Class generated from <tt>actions/destroy/DestroyRequest.msg:15</tt> by nedtool.
 * <pre>
 * message DestroyRequest
 * {
 *     EntryWrapper entryWrapper;
 * 
 * }
 * </pre>
 */
class DestroyRequest : public ::omnetpp::cMessage
{
  protected:
    EntryWrapper entryWrapper;

  private:
    void copy(const DestroyRequest& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DestroyRequest&);

  public:
    DestroyRequest(const char *name=nullptr, short kind=0);
    DestroyRequest(const DestroyRequest& other);
    virtual ~DestroyRequest();
    DestroyRequest& operator=(const DestroyRequest& other);
    virtual DestroyRequest *dup() const override {return new DestroyRequest(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual EntryWrapper& getEntryWrapper();
    virtual const EntryWrapper& getEntryWrapper() const {return const_cast<DestroyRequest*>(this)->getEntryWrapper();}
    virtual void setEntryWrapper(const EntryWrapper& entryWrapper);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DestroyRequest& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DestroyRequest& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DESTROYREQUEST_M_H

