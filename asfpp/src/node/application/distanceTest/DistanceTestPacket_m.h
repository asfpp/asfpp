//
// Generated file, do not edit! Created by nedtool 5.4 from node/application/distanceTest/DistanceTestPacket.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __DISTANCETESTPACKET_M_H
#define __DISTANCETESTPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "ApplicationPacket_m.h"
// }}

/**
 * Struct generated from node/application/distanceTest/DistanceTestPacket.msg:19 by nedtool.
 */
struct DistanceReportData
{
    DistanceReportData();
    unsigned short nodeID;
    double locX;
    double locY;
};

// helpers for local use
void __doPacking(omnetpp::cCommBuffer *b, const DistanceReportData& a);
void __doUnpacking(omnetpp::cCommBuffer *b, DistanceReportData& a);

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DistanceReportData& obj) { __doPacking(b, obj); }
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DistanceReportData& obj) { __doUnpacking(b, obj); }

/**
 * Class generated from <tt>node/application/distanceTest/DistanceTestPacket.msg:25</tt> by nedtool.
 * <pre>
 * packet DistanceTestDataPacket extends ApplicationPacket
 * {
 *     DistanceReportData extraData;
 * }
 * </pre>
 */
class DistanceTestDataPacket : public ::ApplicationPacket
{
  protected:
    DistanceReportData extraData;

  private:
    void copy(const DistanceTestDataPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DistanceTestDataPacket&);

  public:
    DistanceTestDataPacket(const char *name=nullptr, short kind=0);
    DistanceTestDataPacket(const DistanceTestDataPacket& other);
    virtual ~DistanceTestDataPacket();
    DistanceTestDataPacket& operator=(const DistanceTestDataPacket& other);
    virtual DistanceTestDataPacket *dup() const override {return new DistanceTestDataPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual DistanceReportData& getExtraData();
    virtual const DistanceReportData& getExtraData() const {return const_cast<DistanceTestDataPacket*>(this)->getExtraData();}
    virtual void setExtraData(const DistanceReportData& extraData);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DistanceTestDataPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DistanceTestDataPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DISTANCETESTPACKET_M_H

