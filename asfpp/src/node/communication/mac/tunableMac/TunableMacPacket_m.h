//
// Generated file, do not edit! Created by nedtool 5.4 from node/communication/mac/tunableMac/TunableMacPacket.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __TUNABLEMACPACKET_M_H
#define __TUNABLEMACPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "MacPacket_m.h"
// }}

/**
 * Enum generated from <tt>node/communication/mac/tunableMac/TunableMacPacket.msg:19</tt> by nedtool.
 * <pre>
 * enum TunableMacFrameTypeDef
 * {
 *     DATA_FRAME = 1;
 *     BEACON_FRAME = 2;
 * }
 * </pre>
 */
enum TunableMacFrameTypeDef {
    DATA_FRAME = 1,
    BEACON_FRAME = 2
};

/**
 * Class generated from <tt>node/communication/mac/tunableMac/TunableMacPacket.msg:24</tt> by nedtool.
 * <pre>
 * packet TunableMacPacket extends MacPacket
 * {
 *     int frameType \@enum(TunableMacFrameTypeDef);
 * }
 * </pre>
 */
class TunableMacPacket : public ::MacPacket
{
  protected:
    int frameType;

  private:
    void copy(const TunableMacPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TunableMacPacket&);

  public:
    TunableMacPacket(const char *name=nullptr, short kind=0);
    TunableMacPacket(const TunableMacPacket& other);
    virtual ~TunableMacPacket();
    TunableMacPacket& operator=(const TunableMacPacket& other);
    virtual TunableMacPacket *dup() const override {return new TunableMacPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getFrameType() const;
    virtual void setFrameType(int frameType);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TunableMacPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TunableMacPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __TUNABLEMACPACKET_M_H

